{"version":3,"sources":["assets/img/LoadingCircle.gif","components/Headers/ProjectPageHeader.js","components/Content/GraphType.js","components/Content/GraphColor.js","components/Content/AxesLabels.js","components/Content/Legend.js","components/Content/GraphDisplay.js","components/Footers/PageFooter.js","views/LandingPage.js","index.js"],"names":["module","exports","ProjectPageHeader","props","React","useState","titleModal","setTitleModal","title","titleInput","setTitleInput","toggleTitleModal","data-placement","color","onClick","isOpen","toggle","value","onInput","e","target","setTitle","className","Math","max","description","length","type","invalid","setDescription","hidden","GraphType","setIsOpen","updateGraphType","action","setGraphType","caret","graphType","container","GraphColor","updateGraphColor","setGraphColor","graphColor","AxesLabels","xLabel","setXLabel","yLabel","setYLabel","placeholder","Legend","addon","onChange","setLegend","checked","GraphDisplay","state","isLoaded","url","process","DATABASE_URL","config","error","graph","generateGraph","bind","fetch","this","method","body","headers","then","response","jsonResponse","JSON","parse","json","setState","fetched","img","message","src","alt","loadingCircle","Component","PageFooter","Date","getFullYear","LandingPage","legend","ReactDOM","render","path","to","document","getElementById"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,2C,6IC2G5BC,MAtFf,SAA2BC,GAEzB,MAAoCC,IAAMC,UAAS,GAAnD,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoCH,IAAMC,SAASF,EAAMK,OAAzD,mBAAOC,EAAP,KAAmBC,EAAnB,KAEMC,EAAmB,WACvBD,EAAcP,EAAMK,OACpBD,GAAeD,IAQjB,OACE,oCACI,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAaM,iBAAe,SAASJ,MAAM,SACrCL,EAAMK,OAEZ,kBAAC,IAAD,CAAQK,MAAM,QAAQC,QAASH,GAA/B,eAIJ,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,sBAIJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQE,MAAM,WAAd,kBAKR,kBAAC,IAAD,CAAOE,OAAQT,EAAYU,OAAQL,GAC/B,kBAAC,IAAD,2BAGA,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIM,MAAOR,EACPS,QAAS,SAAAC,GAAC,OAAIT,EAAcS,EAAEC,OAAOH,WAE7C,kBAAC,IAAD,KACA,kBAAC,IAAD,CACIJ,MAAM,UACNC,QAzCE,WAClBP,GAAc,GACdJ,EAAMkB,SAASZ,KAqCH,UAMA,kBAAC,IAAD,CAAQK,QAASH,GAAjB,cAOR,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,yBAAKW,UAAU,QACX,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,qBACkBC,KAAKC,IAAI,EAAG,IAAIrB,EAAMsB,YAAYC,QADpD,qBAGA,kBAAC,IAAD,CACIC,KAAK,WACLC,QAASzB,EAAMsB,YAAYC,OAAS,IACpCR,QAAS,SAAAC,GAAC,OAAIhB,EAAM0B,eAAeV,EAAEC,OAAOH,UAChD,kBAAC,IAAD,CAAca,OAAQ3B,EAAMsB,YAAYC,QAAU,KAAlD,+BCzCbK,MA1Cf,SAAmB5B,GAEf,MAA4BC,IAAMC,UAAS,GAA3C,mBAAOU,EAAP,KAAeiB,EAAf,KAMMC,EAAkB,SAACC,GACrB/B,EAAMgC,aAAaD,IAGvB,OACI,oCACI,6BACI,4BAAQP,KAAM,mBAAd,wCAGA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUX,OAfH,WACnBgB,GAAWjB,IAcmCA,OAAQA,GACtC,kBAAC,IAAD,CAAgBqB,OAAK,GAArB,eACiBjC,EAAMkC,WAEvB,kBAAC,IAAD,CAAcC,UAAU,QACpB,kBAAC,IAAD,CAAcxB,QAAS,kBAAMmB,EAAgB,SAA7C,aAGA,kBAAC,IAAD,CAAcnB,QAAS,kBAAMmB,EAAgB,UAA7C,cAGA,kBAAC,IAAD,CAAcnB,QAAS,kBAAMmB,EAAgB,aAA7C,mBAOhB,+BCQGM,MA7Cf,SAAoBpC,GAEhB,MAA4BC,IAAMC,UAAS,GAA3C,mBAAOU,EAAP,KAAeiB,EAAf,KAMMQ,EAAmB,SAACN,GACtB/B,EAAMsC,cAAcP,IAGxB,OACI,oCACI,6BACI,4BAAQP,KAAM,mBAAd,yCAGA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUX,OAfH,WACnBgB,GAAWjB,IAcmCA,OAAQA,GACtC,kBAAC,IAAD,CAAgBqB,OAAK,GAArB,gBACkBjC,EAAMuC,YAExB,kBAAC,IAAD,CAAcJ,UAAU,QACpB,kBAAC,IAAD,CAAcxB,QAAS,kBAAM0B,EAAiB,SAA9C,OAGA,kBAAC,IAAD,CAAc1B,QAAS,kBAAM0B,EAAiB,WAA9C,SAGA,kBAAC,IAAD,CAAc1B,QAAS,kBAAM0B,EAAiB,UAA9C,QAGA,kBAAC,IAAD,CAAc1B,QAAS,kBAAM0B,EAAiB,YAA9C,cAOhB,+BCNGG,MAnCf,SAAoBxC,GAEhB,MAA4BC,IAAMC,UAAS,GAA3C,mBAAOuC,EAAP,KAAeC,EAAf,KACA,EAA4BzC,IAAMC,UAAS,GAA3C,mBAAOyC,EAAP,KAAeC,EAAf,KAUA,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQ7B,QAAS,SAAAC,GAAC,OAAI0B,EAAU1B,EAAEC,OAAOH,QACjC+B,YAAY,8BACpB,kBAAC,IAAD,CAAQlC,QAbC,WACjBX,EAAM0C,UAAUD,KAYR,UAIJ,6BACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQ1B,QAAS,SAAAC,GAAC,OAAI4B,EAAU5B,EAAEC,OAAOH,QACjC+B,YAAY,8BACpB,kBAAC,IAAD,CAAQlC,QAjBC,WACjBX,EAAM4C,UAAUD,KAgBR,UAIJ,+BCbGG,MAjBf,SAAgB9C,GACZ,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,wBAGA,kBAAC,IAAD,CAAQwB,KAAK,WACLuB,OAAK,EACLC,SAAU,SAAChC,GAAD,OAAOhB,EAAMiD,UAAUjC,EAAEC,OAAOiC,aAGtD,+B,yDCkEGC,E,kDApFX,WAAYnD,GAAQ,IAAD,8BACf,cAAMA,IACDoD,MAAQ,CACTC,UAAU,EAEVC,IAAKC,mHAAYC,aACjBC,OAAQzD,EAAMyD,OAEdC,MAAO,KACPC,MAAO,MAIX,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBAbN,E,iDAgBnB,WAAiB,IAAD,OAEZC,MAAMC,KAAKT,IAAK,CACZU,OAAQ,OACRC,KAAMF,KAAKX,MAAMK,OACjBS,QAAS,CACL,eAAgB,sBAGvBC,MACG,SAACC,GACG,IAAIC,EAAeC,KAAKC,MAAMH,EAASI,MACvC,EAAKC,SAAS,CACVC,SAAS,EACTrB,UAAU,EACVM,MAAOU,EAAaM,SAG5B,SAACjB,GACG,EAAKe,SAAS,CACVC,SAAS,EACTrB,UAAU,EACVK,e,oBAMhB,WACI,MAAmCK,KAAKX,MAAhCC,EAAR,EAAQA,SAAUK,EAAlB,EAAkBA,MAAOC,EAAzB,EAAyBA,MAGzB,OAAID,EAEI,uCACYA,EAAMkB,SAKjBjB,EASIN,EAQG,6BACI,yBAAKwB,IAAKlB,EAAOmB,IAAI,KACrB,4BAAQnE,QAASoD,KAAKH,eAAtB,aARJ,6BACI,yBAAKiB,IAAKE,IAAeD,IAAI,MAVrC,uEAEI,4BAAQnE,QAASoD,KAAKH,eAAtB,iB,GA7DG3D,IAAM+E,WCiBlBC,MAhBf,WACE,OACE,4BAAQ9D,UAAU,oCAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,yBAAKA,UAAU,mBACb,0BAAMA,UAAU,aAAhB,SACK,IAAI+D,MAAOC,cADhB,qBCiEGC,MAhEf,WAEE,MAAkCnF,IAAMC,SAAS,iBAAjD,mBAAOgC,EAAP,KAAkBF,EAAlB,KACA,EAAoC/B,IAAMC,SAAS,QAAnD,mBAAOqC,EAAP,KAAmBD,EAAnB,KACA,EAA0BrC,IAAMC,SAAS,iBAAzC,mBAAOG,EAAP,KAAca,EAAd,KACA,EAAsCjB,IAAMC,SAAS,IAArD,mBAAOoB,EAAP,KAAoBI,EAApB,KACA,EAA4BzB,IAAMC,UAAS,GAA3C,mBAAOuC,EAAP,KAAeC,EAAf,KACA,EAA4BzC,IAAMC,UAAS,GAA3C,mBAAOyC,EAAP,KAAeC,EAAf,KACA,EAA4B3C,IAAMC,UAAS,GAA3C,mBAAOmF,EAAP,KAAepC,EAAf,KAEA,OACE,oCACE,kBAAC,EAAD,CAAoB5C,MAAOA,EACPa,SAAUA,EACVI,YAAaA,EACbI,eAAgBA,IAEpC,kBAAC,EAAD,CAAYQ,UAAWA,EACXF,aAAcA,IAE1B,kBAAC,EAAD,CAAYO,WAAYA,EACZD,cAAeA,IAE3B,kBAAC,EAAD,CAAYG,OAAQA,EACRC,UAAWA,EACXC,OAAQA,EACRC,UAAWA,IAEvB,kBAAC,EAAD,CAAQyC,OAAQA,EACRpC,UAAWA,IAUnB,kBAAC,EAAD,CAAcQ,OACV,CACE,MAAS,CACP,CACE,UAAavB,EACb,UAAa,CAAC,MAASK,EACT,MAAS,0BACT,MAAS,oBACT,MAASlC,KAG3B,WAAc,CACZ,MAASA,EACT,OAAUoC,EACV,OAAUE,EACV,OAAU0C,MAKlB,kBAAC,EAAD,QC9DNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,SAASD,OAAQ,SAACvF,GAAD,OAAW,kBAAC,EAAgBA,MACzD,kBAAC,IAAD,CAAUyF,GAAG,aAGjBC,SAASC,eAAe,W","file":"static/js/main.44e049de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LoadingCircle.a41438ad.gif\";","import React from \"react\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n    Button,\n    Container,\n    Form,\n    FormFeedback,\n    FormGroup,\n    Input,\n    Label,\n    Modal,\n    ModalBody,\n    ModalFooter,\n    ModalHeader,\n    Nav,\n    NavbarBrand,\n    Navbar,\n    NavItem,\n} from \"reactstrap\";\n\nfunction ProjectPageHeader(props) {\n  \n  const [titleModal, setTitleModal] = React.useState(false);\n  const [titleInput, setTitleInput] = React.useState(props.title);\n\n  const toggleTitleModal = () => {\n    setTitleInput(props.title);\n    setTitleModal(!titleModal);\n  };\n\n  const updateTitle = () => {\n    setTitleModal(false);\n    props.setTitle(titleInput);\n  };\n\n  return (\n    <>\n        <Navbar>\n          <Container>\n            <Nav>\n                <NavbarBrand data-placement=\"bottom\" title=\"Title\">\n                    { props.title }\n                </NavbarBrand>\n                <Button color=\"light\" onClick={toggleTitleModal}>\n                    Edit Title\n                </Button>\n            </Nav>\n            <Nav>\n                <NavItem>\n                    <Button>\n                        Save Project\n                    </Button>\n                </NavItem>\n                <NavItem>\n                    <Button color=\"primary\">\n                        + Upload CSV\n                    </Button>\n                </NavItem>\n            </Nav>\n            <Modal isOpen={titleModal} toggle={toggleTitleModal}>\n                <ModalHeader>\n                    Edit Project Title\n                </ModalHeader>\n                <ModalBody>\n                    <Input\n                        value={titleInput} \n                        onInput={e => setTitleInput(e.target.value)} />\n                </ModalBody>\n                <ModalFooter>\n                <Button\n                    color=\"primary\"\n                    onClick={updateTitle}\n                >\n                    Update\n                </Button>\n                <Button onClick={toggleTitleModal}>\n                    Cancel\n                </Button>\n                </ModalFooter>\n            </Modal>\n          </Container>\n        </Navbar>\n        <Navbar>\n            <Container>\n                <div className=\"w-50\">\n                    <Form>\n                        <FormGroup>\n                            <Label>\n                                Description ({Math.max(0, 120-props.description.length)} characters left)\n                            </Label>\n                            <Input \n                                type=\"textarea\" \n                                invalid={props.description.length > 120}\n                                onInput={e => props.setDescription(e.target.value)} />\n                            <FormFeedback hidden={props.description.length <= 120}>\n                                Too many characters.\n                            </FormFeedback>\n                        </FormGroup> \n                    </Form>\n                </div>\n            </Container>\n        </Navbar>  \n    </>\n  );\n}\n\nexport default ProjectPageHeader;","import React from \"react\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// reactstrap components\nimport {\n    Dropdown,\n    DropdownItem,\n    DropdownMenu,\n    DropdownToggle,\n    Container\n  } from \"reactstrap\";\n\nfunction GraphType(props) {\n  \n    const [isOpen, setIsOpen] = React.useState(false);\n\n    const toggleDropdown = () => {\n        setIsOpen(!isOpen);\n    };\n\n    const updateGraphType = (action) => {\n        props.setGraphType(action);\n    }\n\n    return (\n        <>\n            <div>\n                <script type= \"text/javascript\">\n                    props.setGraphType(\"None selected\");\n                </script>\n                <Container>\n                    <Dropdown toggle={toggleDropdown} isOpen={isOpen}>\n                        <DropdownToggle caret>\n                            Graph Type: {props.graphType}\n                        </DropdownToggle>\n                        <DropdownMenu container=\"body\">\n                            <DropdownItem onClick={() => updateGraphType(\"Bar\")}>\n                                Bar Graph\n                            </DropdownItem>\n                            <DropdownItem onClick={() => updateGraphType(\"Line\")}>\n                                Line Graph\n                            </DropdownItem>\n                            <DropdownItem onClick={() => updateGraphType(\"Scatter\")}>\n                                Scatterplot\n                            </DropdownItem>\n                        </DropdownMenu>\n                    </Dropdown>\n                </Container>\n            </div>\n            <br/>\n        </>\n    );\n}\n\nexport default GraphType;","import React from \"react\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// reactstrap components\nimport {\n    Dropdown,\n    DropdownItem,\n    DropdownMenu,\n    DropdownToggle,\n    Container\n  } from \"reactstrap\";\n\nfunction GraphColor(props) {\n  \n    const [isOpen, setIsOpen] = React.useState(false);\n\n    const toggleDropdown = () => {\n        setIsOpen(!isOpen);\n    };\n\n    const updateGraphColor = (action) => {\n        props.setGraphColor(action);\n    }\n\n    return (\n        <>\n            <div>\n                <script type= \"text/javascript\">\n                    props.setGraphColor(\"None selected\");\n                </script>\n                <Container>\n                    <Dropdown toggle={toggleDropdown} isOpen={isOpen}>\n                        <DropdownToggle caret>\n                            Graph Color: {props.graphColor}\n                        </DropdownToggle>\n                        <DropdownMenu container=\"body\">\n                            <DropdownItem onClick={() => updateGraphColor(\"Red\")}>\n                                Red\n                            </DropdownItem>\n                            <DropdownItem onClick={() => updateGraphColor(\"Green\")}>\n                                Green\n                            </DropdownItem>\n                            <DropdownItem onClick={() => updateGraphColor(\"Blue\")}>\n                                Blue\n                            </DropdownItem>\n                            <DropdownItem onClick={() => updateGraphColor(\"Yellow\")}>\n                                Yellow\n                            </DropdownItem>\n                        </DropdownMenu>\n                    </Dropdown>\n                </Container>\n            </div>\n            <br/>\n        </>\n    );\n}\n\nexport default GraphColor;","import React from \"react\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// reactstrap components\nimport {\n    Input,\n    InputGroup,\n    Button,\n    Container\n  } from \"reactstrap\";\n\nfunction AxesLabels(props) {\n\n    const [xLabel, setXLabel] = React.useState(false);\n    const [yLabel, setYLabel] = React.useState(false);\n\n    const updateXLabel = () => {\n        props.setXLabel(xLabel);\n    }\n\n    const updateYLabel = () => {\n        props.setYLabel(yLabel);\n    }\n\n    return (\n        <Container>\n            <InputGroup>\n                <Input  onInput={e => setXLabel(e.target.value)}\n                        placeholder=\"input name of X axis here\"/>\n                <Button onClick={updateXLabel}>\n                    Enter\n                </Button>\n            </InputGroup>\n            <br />\n            <InputGroup>\n                <Input  onInput={e => setYLabel(e.target.value)}\n                        placeholder=\"input name of Y axis here\"/>\n                <Button onClick={updateYLabel}>\n                    Enter\n                </Button>\n            </InputGroup>\n            <br />\n        </Container>\n    );\n}\n\nexport default AxesLabels;","import React from \"react\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// reactstrap components\nimport {\n    Input,\n    InputGroup,\n    InputGroupText,\n    Container\n  } from \"reactstrap\";\n\nfunction Legend(props) {\n    return (\n        <Container>\n            <InputGroup>\n                <InputGroupText>\n                    Legend Desired?\n                </InputGroupText>\n                <Input  type=\"checkbox\"\n                        addon\n                        onChange={(e) => props.setLegend(e.target.checked)}\n                />\n            </InputGroup>\n            <br />\n        </Container>\n    );\n}\n\nexport default Legend;","import React from \"react\";\n\nimport loadingCircle from \"../../assets/img/LoadingCircle.gif\";\n\nclass GraphDisplay extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoaded: false,\n            \n            url: process.env.DATABASE_URL,\n            config: props.config,\n\n            error: null,\n            graph: null\n        };\n\n        // Bind function to the class\n        this.generateGraph = this.generateGraph.bind(this);\n    }\n\n    generateGraph() {\n        // Make fetch request\n        fetch(this.url, {\n            method: \"POST\",\n            body: this.state.config,\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        .then(\n            (response) => {\n                let jsonResponse = JSON.parse(response.json);\n                this.setState({\n                    fetched: true,\n                    isLoaded: true,\n                    graph: jsonResponse.img\n                })\n            },\n            (error) => {\n                this.setState({\n                    fetched: true,\n                    isLoaded: true,\n                    error\n                })\n            }\n        );   \n    }\n\n    render() {\n        const { isLoaded, error, graph } = this.state;\n\n        // Verify graph fetch has not encountered an error\n        if (error) {\n            return (\n                <div>\n                    Error: {error.message}\n                </div>\n            );\n        } else {\n            // Verify that graph fetch has been called at least once\n            if (!graph) {\n                return (\n                    <div>\n                        Click \"Generate\" to display your graph!\n                        <button onClick={this.generateGraph}>Generate</button>\n                    </div>\n                );\n            } else {\n                // Verify that graph fetch has completed\n                if (!isLoaded) {\n                    return (\n                        <div>\n                            <img src={loadingCircle} alt=\"\"></img>\n                        </div>\n                    );\n                } else {\n                    return (\n                        <div>\n                            <img src={graph} alt=\"\"></img>\n                            <button onClick={this.generateGraph}>Generate</button>\n                        </div>\n                    );\n                }\n            }\n        }\n    }\n}\n\nexport default GraphDisplay;","import React from \"react\";\n\n// reactstrap components\nimport { Row, Container } from \"reactstrap\";\n\nfunction PageFooter() {\n  return (\n    <footer className=\"footer footer-black footer-white\">\n      <Container>\n        <Row>\n          <div className=\"credits ml-auto\">\n            <span className=\"copyright\">\n              © {new Date().getFullYear()} MeltingPlot\n            </span>\n          </div>\n        </Row>\n      </Container>\n    </footer>\n  );\n}\n\nexport default PageFooter;\n","import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// core components\nimport ProjectPageHeader from \"../components/Headers/ProjectPageHeader.js\";\nimport GraphType from \"../components/Content/GraphType.js\";\nimport GraphColor from \"../components/Content/GraphColor.js\";\nimport AxesLabels from \"../components/Content/AxesLabels.js\";\nimport Legend from \"../components/Content/Legend.js\";\nimport GraphDisplay from \"../components/Content/GraphDisplay.js\";\nimport PageFooter from \"../components/Footers/PageFooter.js\";\n\nfunction LandingPage() {\n\n  const [graphType, setGraphType] = React.useState(\"None selected\");\n  const [graphColor, setGraphColor] = React.useState(\"Blue\");\n  const [title, setTitle] = React.useState('Project title');\n  const [description, setDescription] = React.useState('');\n  const [xLabel, setXLabel] = React.useState(false);\n  const [yLabel, setYLabel] = React.useState(false);\n  const [legend, setLegend] = React.useState(false);\n\n  return (\n    <>\n      <ProjectPageHeader  title={title} \n                          setTitle={setTitle} \n                          description={description} \n                          setDescription={setDescription} \n      />\n      <GraphType  graphType={graphType}\n                  setGraphType={setGraphType}\n      />\n      <GraphColor graphColor={graphColor}\n                  setGraphColor={setGraphColor}\n      />\n      <AxesLabels xLabel={xLabel}\n                  setXLabel={setXLabel}\n                  yLabel={yLabel}\n                  setYLabel={setYLabel}\n      />\n      <Legend legend={legend}\n              setLegend={setLegend}\n      />\n      {/* <GraphDisplay graphType={graphType}\n                    graphColor={graphColor}\n                    title={title}\n                    description={description}\n                    xLabel={xLabel}\n                    yLabel={yLabel}\n                    legend={legend}\n      /> */}\n      <GraphDisplay config={\n          {\n            \"Lines\": [\n              {\n                \"GraphType\": graphType,\n                \"GraphData\": {\"Color\": graphColor,\n                              \"XData\": \"np.arange(0.0,2.0,0.01)\",\n                              \"YData\": \"np.sin(2*np.pi*t)\",\n                              \"Label\": title}\n              },\n            ],\n            \"Attributes\": {\n              \"Title\": title,\n              \"XLabel\": xLabel,\n              \"YLabel\": yLabel,\n              \"Legend\": legend\n            }\n          }\n        }\n      />\n      <PageFooter/>\n    </>\n  );\n}\n\nexport default LandingPage;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter, Route, Redirect, Switch } from \"react-router-dom\";\n\n// pages\n\nimport LandingPage from \"./views/LandingPage.js\";\n// others\n\nReactDOM.render(\n  <HashRouter>\n    <Switch>\n      <Route path=\"/index\" render={(props) => <LandingPage {...props} />} />\n      <Redirect to=\"/index\" />\n    </Switch>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}