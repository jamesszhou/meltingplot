{"version":3,"sources":["components/Modals/TitleEditModal.js","components/Modals/FileUploadModal.js","components/Headers/ProjectPageHeader.js","components/Content/GraphType.js","components/Content/GraphColor.js","components/Content/AxesLabels.js","components/Content/Legend.js","components/Content/GraphDisplay.js","components/Footers/PageFooter.js","util/GeneratePython.js","components/Content/PythonDisplay.js","views/LandingPage.js","index.js","assets/img/LoadingCircle.gif"],"names":["TitleEditModal","props","React","useState","title","titleInput","setTitleInput","isOpen","titleModal","toggle","toggleTitleModal","value","onInput","e","target","color","onClick","setTitle","FileUploadModal","fileInput","createRef","valid","setValid","fileModal","toggleFileModal","onSubmit","preventDefault","formData","FormData","append","elements","files","fetch","window","location","origin","method","body","then","response","ok","alert","ref","name","type","accept","onChange","filename","extension","substring","lastIndexOf","disabled","ProjectPageHeader","setTitleModal","setFileModal","data-placement","className","Math","max","description","length","invalid","setDescription","hidden","GraphType","setIsOpen","updateGraphType","action","setGraphType","caret","graphType","container","GraphColor","updateGraphColor","setGraphColor","graphColor","AxesLabels","val","setXLabel","placeholder","setYLabel","Legend","addon","setLegend","checked","GraphDisplay","isLoaded","setIsLoaded","error","setError","graph","setGraph","generateGraph","JSON","stringify","config","status","blob","json","text","Error","message","catch","imageBlob","imageObjectURL","URL","createObjectURL","src","alt","loadingCircle","PageFooter","Date","getFullYear","graphSpecs","attribute","attributes","PythonDisplay","language","style","docco","request","requestObj","code","forEach","line","xData","yData","innerCode","Object","entries","spec","graphTypes","key","generateCode","LandingPage","xLabel","yLabel","legend","inputList","setInputList","handleGraphData","index","list","GraphData","Color","XData","YData","Label","map","x","i","md","size","offset","splice","handleRemoveClick","handleInputChange","ReactDOM","render","path","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d30c88bd.chunk.js","sourcesContent":["import React from \"react\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n    Button,\n    Input,\n    Modal,\n    ModalBody,\n    ModalFooter,\n    ModalHeader,\n} from \"reactstrap\";\n\nfunction TitleEditModal(props) {\n\n    const [titleInput, setTitleInput] = React.useState(props.title);\n\n    const updateTitle = () => {\n        props.toggleTitleModal();\n        props.setTitle(titleInput);\n    };\n\n    return (\n        <>\n            <Modal isOpen={props.titleModal} toggle={props.toggleTitleModal}>\n                <ModalHeader>\n                    Edit Project Title\n                </ModalHeader>\n                <ModalBody>\n                    <Input\n                        value={titleInput}\n                        onInput={e => setTitleInput(e.target.value)} />\n                </ModalBody>\n                <ModalFooter>\n                    <Button\n                        color=\"primary\"\n                        onClick={updateTitle}\n                    >\n                        Update\n                    </Button>\n                    <Button onClick={props.toggleTitleModal}>\n                        Cancel\n                    </Button>\n                </ModalFooter>\n            </Modal>\n        </>\n    );\n}\n\nexport default TitleEditModal;","import React, { createRef } from \"react\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n    Button,\n    Form,\n    FormGroup,\n    Input,\n    Modal,\n    ModalBody,\n    ModalFooter,\n    ModalHeader,\n} from \"reactstrap\";\n\nfunction FileUploadModal(props) {\n\n    const fileInput = createRef();\n    const [valid, setValid] = React.useState(false);\n\n    const handleChange = (e) => {\n        const filename = e.target.files[0].name;\n        const extension = filename.substring(filename.lastIndexOf('.'));\n        if (extension === '.csv') {\n            setValid(true);\n        } else {\n            setValid(false);\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        let formData = new FormData();\n        formData.append(\"file\", e.target.elements.fileInput.files[0]);\n\n        // TODO: Change this to project_id is correct\n        fetch(`${window.location.origin}/api/csv/?project_id=1`, {\n            method: \"POST\",\n            body: formData\n          })\n        .then(\n            (response) => {\n                if (response.ok){\n                    alert(\"Upload success\")\n                    props.toggleFileModal();\n                }\n                else{\n                    alert(\"Could not upload csv\");\n                }\n                \n            }\n        )\n    }\n\n    return (\n        <Modal isOpen={props.fileModal} toggle={props.toggleFileModal}>\n            <ModalHeader>\n                Upload CSV Data\n            </ModalHeader>\n            <ModalBody>\n                <Form onSubmit={handleSubmit}>\n                    <FormGroup>\n                        <Input\n                            ref={fileInput}\n                            name=\"fileInput\"\n                            type=\"file\"\n                            accept=\".csv\"\n                            onChange={handleChange}\n                        />\n                    </FormGroup>\n                    <Button type=\"submit\" color=\"primary\" disabled={!valid}>\n                        Upload\n                    </Button>\n                </Form>\n            </ModalBody>\n            <ModalFooter>\n                <Button onClick={props.toggleFileModal}>\n                    Cancel\n                </Button>\n            </ModalFooter>\n        </Modal>\n    );\n}\n\nexport default FileUploadModal;","import React from \"react\";\n\nimport TitleEditModal from \"../Modals/TitleEditModal.js\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n    Button,\n    Container,\n    Form,\n    FormFeedback,\n    FormGroup,\n    Input,\n    Label,\n    Nav,\n    NavbarBrand,\n    Navbar,\n    NavItem,\n} from \"reactstrap\";\nimport FileUploadModal from \"../Modals/FileUploadModal.js\";\n\nfunction ProjectPageHeader(props) {\n\n    const [titleModal, setTitleModal] = React.useState(false);\n    const [fileModal, setFileModal] = React.useState(false);\n\n    const toggleTitleModal = () => {\n        setTitleModal(!titleModal);\n    };\n\n    const toggleFileModal = () => {\n        setFileModal(!fileModal);\n    }\n\n    return (\n        <>\n            <Navbar>\n                <Container>\n                    <Nav>\n                        <NavbarBrand data-placement=\"bottom\" title=\"Title\">\n                            {props.title}\n                        </NavbarBrand>\n                        <Button color=\"light\" onClick={toggleTitleModal}>\n                            Edit Title\n                        </Button>\n                    </Nav>\n                    <Nav>\n                        <NavItem>\n                            <Button>\n                                Save Project\n                            </Button>\n                        </NavItem>\n                        <NavItem>\n                            <Button color=\"primary\" onClick={toggleFileModal}>\n                                + Upload CSV\n                            </Button>\n                        </NavItem>\n                    </Nav>\n                    <TitleEditModal title={props.title}\n                        setTitle={props.setTitle}\n                        titleModal={titleModal}\n                        toggleTitleModal={toggleTitleModal} />\n                    <FileUploadModal fileModal={fileModal}\n                        toggleFileModal={toggleFileModal} />\n                </Container>\n            </Navbar>\n            <Navbar>\n                <Container>\n                    <div className=\"w-50\">\n                        <Form>\n                            <FormGroup>\n                                <Label>\n                                    Description ({Math.max(0, 120 - props.description.length)} characters left)\n                                </Label>\n                                <Input\n                                    type=\"textarea\"\n                                    invalid={props.description.length > 120}\n                                    onInput={e => props.setDescription(e.target.value)} />\n                                <FormFeedback hidden={props.description.length <= 120}>\n                                    Too many characters.\n                                </FormFeedback>\n                            </FormGroup>\n                        </Form>\n                    </div>\n                </Container>\n            </Navbar>\n        </>\n    );\n}\n\nexport default ProjectPageHeader;","import React from \"react\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// reactstrap components\nimport {\n    Dropdown,\n    DropdownItem,\n    DropdownMenu,\n    DropdownToggle,\n    Container\n  } from \"reactstrap\";\n\nfunction GraphType(props) {\n  \n    const [isOpen, setIsOpen] = React.useState(false);\n\n    const toggleDropdown = () => {\n        setIsOpen(!isOpen);\n    };\n\n    const updateGraphType = (action) => {\n        props.setGraphType({\"target\": {\"name\": \"GraphType\", \"value\": action}});\n    }\n\n    return (\n        <>\n            <div>\n                <script type= \"text/javascript\">\n                    props.setGraphType(\"None selected\");\n                </script>\n                <Container>\n                    <Dropdown toggle={toggleDropdown} isOpen={isOpen}>\n                        <DropdownToggle caret>\n                            Graph/Line Type: {props.graphType}\n                        </DropdownToggle>\n                        <DropdownMenu container=\"body\">\n                            <DropdownItem onClick={() => updateGraphType(\"Bar\")}>\n                                Bar Graph\n                            </DropdownItem>\n                            <DropdownItem onClick={() => updateGraphType(\"Line\")}>\n                                Line Graph\n                            </DropdownItem>\n                            <DropdownItem onClick={() => updateGraphType(\"Scatter\")}>\n                                Scatterplot\n                            </DropdownItem>\n                        </DropdownMenu>\n                    </Dropdown>\n                </Container>\n            </div>\n            <br/>\n        </>\n    );\n}\n\nexport default GraphType;","import React from \"react\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// reactstrap components\nimport {\n    Dropdown,\n    DropdownItem,\n    DropdownMenu,\n    DropdownToggle,\n    Container\n  } from \"reactstrap\";\n\nfunction GraphColor(props) {\n  \n    const [isOpen, setIsOpen] = React.useState(false);\n\n    const toggleDropdown = () => {\n        setIsOpen(!isOpen);\n    };\n\n    const updateGraphColor = (action) => {\n        props.setGraphColor({\"target\": {\"name\": \"Color\", \"value\": action}});\n    }\n\n    return (\n        <>\n            <div>\n                <script type= \"text/javascript\">\n                    props.setGraphColor(\"None selected\");\n                </script>\n                <Container>\n                    <Dropdown toggle={toggleDropdown} isOpen={isOpen}>\n                        <DropdownToggle caret>\n                            Graph Color: {props.graphColor}\n                        </DropdownToggle>\n                        <DropdownMenu container=\"body\">\n                            <DropdownItem onClick={() => updateGraphColor(\"Red\")}>\n                                Red\n                            </DropdownItem>\n                            <DropdownItem onClick={() => updateGraphColor(\"Green\")}>\n                                Green\n                            </DropdownItem>\n                            <DropdownItem onClick={() => updateGraphColor(\"Blue\")}>\n                                Blue\n                            </DropdownItem>\n                            <DropdownItem onClick={() => updateGraphColor(\"Yellow\")}>\n                                Yellow\n                            </DropdownItem>\n                        </DropdownMenu>\n                    </Dropdown>\n                </Container>\n            </div>\n            <br/>\n        </>\n    );\n}\n\nexport default GraphColor;","import React from \"react\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// reactstrap components\nimport {\n    Input,\n    InputGroup,\n    Container\n  } from \"reactstrap\";\n\nfunction AxesLabels(props) {\n\n    const updateXLabel = (val) => {\n        props.setXLabel(val);\n    }\n\n    const updateYLabel = (val) => {\n        props.setYLabel(val);\n    }\n\n    return (\n        <Container>\n            <div>\n                X-axis Label:\n            </div>\n            <InputGroup>\n                \n                <Input  onInput={e => updateXLabel(e.target.value)}\n                        placeholder=\"input name of X axis here\"/>\n            </InputGroup>\n            <br />\n            <div>\n                Y-axis Label:\n            </div>\n            <InputGroup>\n                <Input  onInput={e => updateYLabel(e.target.value)}\n                        placeholder=\"input name of Y axis here\"/>\n            </InputGroup>\n            <br />\n        </Container>\n    );\n}\n\nexport default AxesLabels;","import React from \"react\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// reactstrap components\nimport {\n    Input,\n    InputGroup,\n    InputGroupText,\n    Container\n  } from \"reactstrap\";\n\nfunction Legend(props) {\n    return (\n        <Container>\n            <InputGroup>\n                <InputGroupText>\n                    Legend Desired?\n                </InputGroupText>\n                <Input  type=\"checkbox\"\n                        addon\n                        onChange={(e) => props.setLegend(e.target.checked)}\n                />\n            </InputGroup>\n            <br />\n        </Container>\n    );\n}\n\nexport default Legend;","import React from \"react\";\n\nimport loadingCircle from \"../../assets/img/LoadingCircle.gif\";\n\n\n\nfunction GraphDisplay(props) {\n    const [isLoaded, setIsLoaded] = React.useState(false);\n    const [error, setError] = React.useState(null);\n    const [graph, setGraph] = React.useState(null);\n    \n    const generateGraph = () => {\n        // Make fetch request\n        fetch(`${window.location.origin}/api/graph?config=${JSON.stringify(props.config)}`, {\n            method: \"GET\"\n        })\n        .then((response) => {\n            if (response.status === 200) {\n                return response.blob()\n            }\n            else{\n                response.json().then(text => { throw new Error(text.message) }).catch(error => {\n                    setIsLoaded(true);\n                    setError(error.message)\n                  })\n            } \n        })\n        .then(\n            (imageBlob) => {\n                const imageObjectURL = URL.createObjectURL(imageBlob)\n                setIsLoaded(true);\n                setGraph(imageObjectURL);\n            }, \n        ) \n        .catch(error => {\n            setIsLoaded(true);\n            setError(error.message)\n          })    \n    }\n    \n        // Verify graph fetch has not encountered an error\n    if (error != null) {\n        return (\n            <>\n            <div>\n                Click \"Generate\" to display your graph!\n                <button onClick={generateGraph}>Generate</button>\n            </div>\n            <div>\n                Error: {error}\n            </div>\n            </>\n        );\n    } else {\n        // Verify that graph fetch has been called at least once\n        if (!graph) {\n            return (\n                <div>\n                    Click \"Generate\" to display your graph!\n                    <button onClick={generateGraph}>Generate</button>\n                </div>\n            );\n        } else {\n            // Verify that graph fetch has completed\n            if (!isLoaded) {\n                return (\n                    <div>\n                        <img src={loadingCircle} alt=\"\"></img>\n                    </div>\n                );\n            } else {\n                return (\n                    <div>\n                        <img src={graph} alt=\"\"></img>\n                        <button onClick={generateGraph}>Generate</button>\n                    </div>\n                );\n            }\n        }\n    }\n}\n\n\nexport default GraphDisplay;","import React from \"react\";\n\n// reactstrap components\nimport { Row, Container } from \"reactstrap\";\n\nfunction PageFooter() {\n  return (\n    <footer className=\"footer footer-black footer-white\">\n      <Container>\n        <Row>\n          <div className=\"credits ml-auto\">\n            <span className=\"copyright\">\n              © {new Date().getFullYear()} MeltingPlot\n            </span>\n          </div>\n        </Row>\n      </Container>\n    </footer>\n  );\n}\n\nexport default PageFooter;\n","const graphTypes = (graphType, innerCode) => {\n    switch (graphType) {\n        case \"Scatter\":\n            return `\\nplt.scatter(${innerCode})`;\n        case \"Bar\":\n            return `\\nplt.bar(${innerCode})`;\n        default:\n            return `\\nplt.plot(${innerCode})`;\n    }\n}\n\nconst graphSpecs = (attribute, value) => {\n    switch (attribute) {\n        case \"Color\":\n            return `, color='${value}'`;\n        case \"XData\":\n            return \"\";\n        case \"YData\":\n            return \"\";\n        case \"Label\":\n            return `, label='${value}'`;\n        case \"LineStyle\":\n            return `, linestyle='${value}'`;\n        default:\n            return \"\";\n    }\n}\n\nconst attributes = (attribute, value) => {\n    switch (attribute) {\n        case \"Title\":\n            return `\\nplt.title(\"${value}\")`;\n        case \"XLabel\":\n            return `\\nplt.xlabel(\"${value}\")`;\n        case \"YLabel\":\n            return `\\nplt.ylabel(\"${value}\")`;\n        default:\n            return `\\nplt.legend()`;\n    }\n}\n\n\nfunction generateCode(request) {\n    const requestObj = request;\n    let code = \"import matplotlib\\n\" +\n        \"import matplotlib.pyplot as plt\\n\" +\n        \"import numpy as np\";\n\n    requestObj[\"Lines\"].forEach(line => {\n        const xData = line[\"GraphData\"][\"XData\"];\n        const yData = line[\"GraphData\"][\"YData\"];\n        let innerCode = `${xData},${yData}`;\n        for (const [spec, value] of Object.entries(line[\"GraphData\"])) {\n            if (value != null && graphSpecs(spec, value) && graphSpecs(spec, value) !== \"\") {\n                innerCode += graphSpecs(spec, value);\n            }\n        }\n        code += graphTypes(line[\"GraphType\"], innerCode);\n    });\n    for (const [key, value] of Object.entries(requestObj[\"Attributes\"])) {\n        if (value){\n            code += attributes(key, value);\n        }\n    }\n\n    return code;\n}\n\n// {\n//     \"Lines\": [\n//         {\n//             \"GraphType\": \"Line\",\n//             \"GraphData\": {\"Color\": \"Blue\",\n//                           \"XData\": \"xdata[0:15]\",\n//                           \"YData\": \"ydata[16:30]\",\n//                           \"Label\": \"Line1\"}\n//         },\n//         {\n//             \"GraphType\": \"Line\",\n//             \"GraphData\": {\"Color\": \"Red\",\n//                           \"XData\": \"xdata[0:15]\",\n//                           \"YData\": \"ydata[16:30]\",\n//                           \"Label\": \"Line2\"}\n//          }\n//     ],\n//     \"Attributes\": {\n//         \"Title\": \"sample graph\",\n//         \"XLabel\": \"Time\",\n//         \"YLabel\": \"Distance\",\n//         \"Legend\": true\n//      }\n// }\n\nexport { generateCode };\n","import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../../css/pythondisplay.css'\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\n// reactstrap components\nimport { generateCode } from \"../../util/GeneratePython\";\n\nfunction PythonDisplay(props) {\n    return (\n            <div className=\"display-linebreak\">\n                <SyntaxHighlighter language=\"python\" style={docco}>\n                    {generateCode(props.config)}\n                </SyntaxHighlighter>\n            </div>\n    );\n}\n\nexport default PythonDisplay;","import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// core components\nimport ProjectPageHeader from \"../components/Headers/ProjectPageHeader.js\";\nimport GraphType from \"../components/Content/GraphType.js\";\nimport GraphColor from \"../components/Content/GraphColor.js\";\nimport AxesLabels from \"../components/Content/AxesLabels.js\";\nimport Legend from \"../components/Content/Legend.js\";\nimport GraphDisplay from \"../components/Content/GraphDisplay.js\";\nimport PageFooter from \"../components/Footers/PageFooter.js\";\nimport PythonDisplay from \"../components/Content/PythonDisplay.js\";\nimport {Row, Col, Button, Input, Card, CardBody, CardTitle, Container} from \"reactstrap\"\n\n\nfunction LandingPage() {\n\n  const [title, setTitle] = React.useState('Project title');\n  const [description, setDescription] = React.useState('');\n  const [xLabel, setXLabel] = React.useState(false);\n  const [yLabel, setYLabel] = React.useState(false);\n  const [legend, setLegend] = React.useState(false);\n\n  const [inputList, setInputList] = React.useState([]);\n\n  // handle input change\n  const handleInputChange = (e, index) => {\n    const { name, value } = e.target;\n    const list = [...inputList];\n    list[index][name] = value;\n    setInputList(list);\n  };\n  const handleGraphData = (e, index) => {\n    const { name, value } = e.target;\n    const list = [...inputList];\n    list[index][\"GraphData\"][name] = value;\n    setInputList(list);\n  };\n\n  // handle click event of the Remove button\n  const handleRemoveClick = index => {\n    const list = [...inputList];\n    list.splice(index, 1);\n    setInputList(list);\n  };\n\n  // handle click event of the Add button\n  const handleAddClick = () => {\n    setInputList([...inputList, { GraphType: null, GraphData: {Color: null, XData: null, YData: null, Label: null} }]);\n  };\n\n  return (\n    <>\n      <ProjectPageHeader  title={title} \n                          setTitle={setTitle} \n                          description={description} \n                          setDescription={setDescription} \n      />\n      <Button onClick={handleAddClick}>Add Line</Button>\n{inputList.map((x, i) => {\n        return (\n          <Container>\n          <Card>\n            <CardTitle>\n            Title:\n              <Row>\n                <Col>\n                <Input\n                className=\"ml10\"\n                name=\"Label\"\n                placeholder=\"Line title\"\n                value={x.GraphData.Label}\n                onChange={e => handleGraphData(e, i)}\n              />\n              </Col>\n              <Col  md={{ size: 2, offset: 4 }}>\n               <div className=\"btn-box\">\n                {inputList.length !== 0 && <Button\n                  className=\"mr10\"\n                  onClick={() => handleRemoveClick(i)}>Remove Line</Button>}\n                \n              </div>\n                </Col>\n              </Row>\n              \n            \n            </CardTitle>\n            <CardBody>\n            <Row>\n            <GraphType graphType={x.GraphType}\n                    setGraphType={e => handleInputChange(e,i)}/>\n              <GraphColor graphColor={x.GraphData.Color}\n                    setGraphColor={e => handleGraphData(e,i)}\n              />\n            </Row>\n            <Row>\n              <Col>\n                <div>\n                X Data:\n                </div>\n                <Input\n                    name=\"XData\"\n                    placeholder=\"X Axis Data\"\n                    value={x.GraphData.XData}\n                    onChange={e => handleGraphData(e, i)}\n                  />\n              </Col>\n              <Col>\n              <div>\n                Y Data:\n              </div>\n                <Input\n                  className=\"ml10\"\n                  name=\"YData\"\n                  placeholder=\"Y Axis Data\"\n                  value={x.GraphData.YData}\n                  onChange={e => handleGraphData(e, i)}\n                />\n                </Col>\n                </Row>\n             \n           \n\n            \n            </CardBody>\n          </Card>\n          </Container>\n        );\n      })}\n      <div>\n        {JSON.stringify(inputList)}\n      </div>\n      \n      <AxesLabels xLabel={xLabel}\n                  setXLabel={setXLabel}\n                  yLabel={yLabel}\n                  setYLabel={setYLabel}\n      />\n      <Legend legend={legend}\n              setLegend={setLegend}\n      />\n      <Row>\n      <Col/>\n\n        <Col>\n        <PythonDisplay config={\n          {\n            \"Lines\": inputList,\n            \"Attributes\": {\n              \"Title\": title,\n              \"XLabel\": xLabel,\n              \"YLabel\": yLabel,\n              \"Legend\": legend\n            }\n          }\n        }\n      />\n        </Col>\n      <Col>\n      <GraphDisplay config={\n          {\n            \"Lines\": inputList,\n            \"Attributes\": {\n              \"Title\": title,\n              \"XLabel\": xLabel,\n              \"YLabel\": yLabel,\n              \"Legend\": legend\n            }\n          }\n        }\n      />\n      </Col>\n      <Col/>\n      </Row>\n      \n      \n      <PageFooter/>\n    </>\n  );\n}\n\nexport default LandingPage;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\n\n// pages\n\nimport LandingPage from \"./views/LandingPage.js\";\n// others\n\nReactDOM.render(\n  <HashRouter>\n    <Switch>\n      <Route path=\"/index\" render={(props) => <LandingPage {...props} />} />\n    </Switch>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/LoadingCircle.a41438ad.gif\";"],"sourceRoot":""}